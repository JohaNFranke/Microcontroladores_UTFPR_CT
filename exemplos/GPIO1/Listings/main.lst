


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Exemplo de uso de GPIO ...
    4 00000000         ; Prof. Guilherme de S. Peron - 12/03/2018
    5 00000000         ; Prof. Marcos E. P. Monteiro - 12/03/2018
    6 00000000         ; Prof. DaLuz             - 25/02/2022
    7 00000000         
    8 00000000         ;#######################################################
                       #########################
    9 00000000         
   10 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                        e/ou a chave USR_SW2.
   11 00000000         ; Caso o usuário pressione a chave USR_SW1, acenderá o L
                       ED3 (PF4). Caso o usuário pressione 
   12 00000000         ; a chave USR_SW2, acenderá o LED4 (PF0). Caso as duas c
                       haves sejam pressionadas, os dois 
   13 00000000         ; LEDs acendem.
   14 00000000         
   15 00000000         ;#######################################################
                       #########################
   16 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   17 00000000         ;#######################################################
                       #########################
   18 00000000         ; Definições dos Registradores Gerais.  Obs: *(EQU)=(EQU
                       ATE)*
   19 00000000         ;<NOME> EQU <VALOR>
   20 00000000         ;#######################################################
                       #########################
   21 00000000         ; Área de Dados - Declarações de variáveis
   22 00000000                 AREA             DATA, ALIGN=2
   23 00000000         ; Se alguma variável for chamada em outro arquivo
   24 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]    ; Permite chamar a v
                       ariável <var> a 
   25 00000000         ; partir de outro arquivo
   26 00000000         ;<var> SPACE <tam>                     ; Declara uma var
                       iável de nome <var>
   27 00000000         ; de <tam> bytes a partir da primeira 
   28 00000000         ; posição da RAM  
   29 00000000         ;#######################################################
                       #########################
   30 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   31 00000000         ;                  código
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   34 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   35 00000000         ; outro arquivo. No caso startup.s
   36 00000000         ; Se chamar alguma função externa 
   37 00000000         ;IMPORT <func>                ; Permite chamar dentro de
                       ste arquivo uma 
   38 00000000         ; função <func>
   39 00000000                 IMPORT           GPIO_Init
   40 00000000                 IMPORT           PortF_Output
   41 00000000                 IMPORT           PortJ_Input



ARM Macro Assembler    Page 2 


   42 00000000         ;#######################################################
                       #########################
   43 00000000         ; Função main()
   44 00000000         Start
   45 00000000 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   46 00000004         
   47 00000004         MainLoop
   48 00000004 F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
   49 00000008         Verifica_Nenhuma
   50 00000008 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr
                                                            essionada
   51 0000000A D104            BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula
   52 0000000C F04F 0000       MOV              R0, #0      ;Não acender nenhum
                                                             LED
   53 00000010 F7FF FFFE       BL               PortF_Output ;Chamar a função p
                                                            ara não acender nen
                                                            hum LED
   54 00000014 E7F6            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
   55 00000016         Verifica_SW1
   56 00000016 2802            CMP              R0, #2_00000010 ;Verifica se so
                                                            mente a chave SW1 e
                                                            stá pressionada
   57 00000018 D104            BNE              Verifica_SW2 ;Se o teste falhou
                                                            , pula
   58 0000001A F04F 0010       MOV              R0, #2_00010000 ;Setar o parâme
                                                            tro de entrada da f
                                                            unção como o BIT4
   59 0000001E F7FF FFFE       BL               PortF_Output ;Chamar a função p
                                                            ara setar o LED3
   60 00000022 E7EF            B                MainLoop    ;Volta para o laço 
                                                            principal
   61 00000024         Verifica_SW2
   62 00000024 2801            CMP              R0, #2_00000001 ;Verifica se so
                                                            mente a chave SW2 e
                                                            stá pressionada
   63 00000026 D104            BNE              Verifica_Ambas ;Se o teste falh
                                                            ou, pula
   64 00000028 F04F 0001       MOV              R0, #2_00000001 ;Setar o parâme
                                                            tro de entrada da f
                                                            unção como o BIT0
   65 0000002C F7FF FFFE       BL               PortF_Output ;Chamar a função p
                                                            ara setar o LED4
   66 00000030 E7E8            B                MainLoop    ;Volta para o laço 
                                                            principal 
   67 00000032         Verifica_Ambas
   68 00000032 2800            CMP              R0, #2_00000000 ;Verifica se am



ARM Macro Assembler    Page 3 


                                                            bas as chaves estão
                                                             pressionadas
   69 00000034 D1E6            BNE              MainLoop    ;Se o teste falhou,
                                                             pula
   70 00000036 F04F 0011       MOV              R0, #2_00010001 ;Setar o parâme
                                                            tro de entrada da f
                                                            unção como o BIT0e 
                                                            o BIT4
   71 0000003A F7FF FFFE       BL               PortF_Output ;Chamar a função p
                                                            ara acender os dois
                                                             LEDs
   72 0000003E E7E1            B                MainLoop    ;Volta para o laço 
                                                            principal 
   73 00000040         
   74 00000040                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
   75 00000040                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\DaLuz\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000004

Symbol: MainLoop
   Definitions
      At line 47 in file main.s
   Uses
      At line 54 in file main.s
      At line 60 in file main.s
      At line 66 in file main.s
      At line 69 in file main.s
      At line 72 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 44 in file main.s
   Uses
      At line 34 in file main.s
Comment: Start used once
Verifica_Ambas 00000032

Symbol: Verifica_Ambas
   Definitions
      At line 67 in file main.s
   Uses
      At line 63 in file main.s
Comment: Verifica_Ambas used once
Verifica_Nenhuma 00000008

Symbol: Verifica_Nenhuma
   Definitions
      At line 49 in file main.s
   Uses
      None
Comment: Verifica_Nenhuma unused
Verifica_SW1 00000016

Symbol: Verifica_SW1
   Definitions
      At line 55 in file main.s
   Uses
      At line 51 in file main.s
Comment: Verifica_SW1 used once
Verifica_SW2 00000024

Symbol: Verifica_SW2
   Definitions
      At line 61 in file main.s
   Uses
      At line 57 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: Verifica_SW2 used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 45 in file main.s
Comment: GPIO_Init used once
PortF_Output 00000000

Symbol: PortF_Output
   Definitions
      At line 40 in file main.s
   Uses
      At line 53 in file main.s
      At line 59 in file main.s
      At line 65 in file main.s
      At line 71 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 41 in file main.s
   Uses
      At line 48 in file main.s
Comment: PortJ_Input used once
3 symbols
345 symbols in table
